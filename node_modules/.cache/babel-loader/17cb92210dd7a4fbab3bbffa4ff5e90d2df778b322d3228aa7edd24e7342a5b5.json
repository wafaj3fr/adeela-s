{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\nimport { flyToViewport, getFlyToDuration } from 'viewport-mercator-project';\nimport { isValid, getEndValueByShortestPath } from './transition-utils';\nimport { lerp } from '../math-utils';\nvar VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nvar REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\nvar LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\nvar DEFAULT_OPTS = {\n  speed: 1.2,\n  curve: 1.414\n};\nvar ViewportFlyToInterpolator = function (_TransitionInterpolat) {\n  _inherits(ViewportFlyToInterpolator, _TransitionInterpolat);\n  function ViewportFlyToInterpolator() {\n    var _this;\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, ViewportFlyToInterpolator);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewportFlyToInterpolator).call(this));\n    _defineProperty(_assertThisInitialized(_this), \"speed\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"propNames\", VIEWPORT_TRANSITION_PROPS);\n    _defineProperty(_assertThisInitialized(_this), \"props\", void 0);\n    _this.props = Object.assign({}, DEFAULT_OPTS, props);\n    return _this;\n  }\n  _createClass(ViewportFlyToInterpolator, [{\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      var startViewportProps = {};\n      var endViewportProps = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = REQUIRED_PROPS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n          var startValue = startProps[key];\n          var endValue = endProps[key];\n          assert(isValid(startValue) && isValid(endValue), \"\".concat(key, \" must be supplied for transition\"));\n          startViewportProps[key] = startValue;\n          endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n      try {\n        for (var _iterator2 = LINEARLY_INTERPOLATED_PROPS[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _key = _step2.value;\n          var _startValue = startProps[_key] || 0;\n          var _endValue = endProps[_key] || 0;\n          startViewportProps[_key] = _startValue;\n          endViewportProps[_key] = getEndValueByShortestPath(_key, _startValue, _endValue);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n      return {\n        start: startViewportProps,\n        end: endViewportProps\n      };\n    }\n  }, {\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      var viewport = flyToViewport(startProps, endProps, t, this.props);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n      try {\n        for (var _iterator3 = LINEARLY_INTERPOLATED_PROPS[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var key = _step3.value;\n          viewport[key] = lerp(startProps[key], endProps[key], t);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n      return viewport;\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration(startProps, endProps) {\n      var transitionDuration = endProps.transitionDuration;\n      if (transitionDuration === 'auto') {\n        transitionDuration = getFlyToDuration(startProps, endProps, this.props);\n      }\n      return transitionDuration;\n    }\n  }]);\n  return ViewportFlyToInterpolator;\n}(TransitionInterpolator);\nexport { ViewportFlyToInterpolator as default };","map":{"version":3,"names":["assert","TransitionInterpolator","flyToViewport","getFlyToDuration","isValid","getEndValueByShortestPath","lerp","VIEWPORT_TRANSITION_PROPS","REQUIRED_PROPS","LINEARLY_INTERPOLATED_PROPS","DEFAULT_OPTS","speed","curve","ViewportFlyToInterpolator","_this","props","arguments","length","undefined","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","Object","assign","startProps","endProps","startViewportProps","endViewportProps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","key","value","startValue","endValue","concat","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_key","_startValue","_endValue","start","end","t","viewport","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","transitionDuration"],"sources":["/home/hp/adeela_map/adeela/node_modules/react-map-gl/src/utils/transition/viewport-fly-to-interpolator.js"],"sourcesContent":["// @flow\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {flyToViewport, getFlyToDuration} from 'viewport-mercator-project';\nimport {isValid, getEndValueByShortestPath} from './transition-utils';\nimport {lerp} from '../math-utils';\n\nimport type {MapStateProps} from '../map-state';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\nconst LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\nconst DEFAULT_OPTS = {\n  speed: 1.2,\n  curve: 1.414\n  // screenSpeed and maxDuration are used only if specified\n};\n\ntype FlyToInterpolatorProps = {\n  curve?: number,\n  speed?: number,\n  screenSpeed?: number,\n  maxDuraiton?: number\n};\n\n/**\n * This class adapts mapbox-gl-js Map#flyTo animation so it can be used in\n * react/redux architecture.\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default class ViewportFlyToInterpolator extends TransitionInterpolator {\n  speed: number;\n  propNames = VIEWPORT_TRANSITION_PROPS;\n\n  /**\n   * @param props {Object}\n   - `props.curve` (Number, optional, default: 1.414) - The zooming \"curve\" that will occur along the flight path.\n   - `props.speed` (Number, optional, default: 1.2) - The average speed of the animation defined in relation to `options.curve`, it linearly affects the duration, higher speed returns smaller durations and vice versa.\n   - `props.screenSpeed` (Number, optional) - The average speed of the animation measured in screenfuls per second. Similar to `opts.speed` it linearly affects the duration,  when specified `opts.speed` is ignored.\n   - `props.maxDuration` (Number, optional) - Maximum duration in milliseconds, if calculated duration exceeds this value, `0` is returned.\n   */\n  constructor(props: FlyToInterpolatorProps = {}) {\n    super();\n\n    this.props = Object.assign({}, DEFAULT_OPTS, props);\n  }\n\n  props: FlyToInterpolatorProps;\n\n  initializeProps(startProps: MapStateProps, endProps: MapStateProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    // Check minimum required props\n    for (const key of REQUIRED_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      const startValue = startProps[key] || 0;\n      const endValue = endProps[key] || 0;\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps: MapStateProps, endProps: MapStateProps, t: number) {\n    const viewport = flyToViewport(startProps, endProps, t, this.props);\n\n    // Linearly interpolate 'bearing' and 'pitch' if exist.\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    return viewport;\n  }\n\n  // computes the transition duration\n  getDuration(startProps: MapStateProps, endProps: MapStateProps) {\n    let {transitionDuration} = endProps;\n    if (transitionDuration === 'auto') {\n      // auto calculate duration based on start and end props\n      transitionDuration = getFlyToDuration(startProps, endProps, this.props);\n    }\n    return transitionDuration;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}