{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport StaticMap from './static-map';\nimport { MAPBOX_LIMITS } from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext from './map-context';\nimport { EventManager } from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport deprecateWarn from '../utils/deprecate-warn';\nvar propTypes = Object.assign({}, StaticMap.propTypes, {\n  maxZoom: PropTypes.number,\n  minZoom: PropTypes.number,\n  maxPitch: PropTypes.number,\n  minPitch: PropTypes.number,\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  transitionInterpolator: PropTypes.object,\n  transitionInterruption: PropTypes.number,\n  transitionEasing: PropTypes.func,\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n  scrollZoom: PropTypes.bool,\n  dragPan: PropTypes.bool,\n  dragRotate: PropTypes.bool,\n  doubleClickZoom: PropTypes.bool,\n  touchZoom: PropTypes.bool,\n  touchRotate: PropTypes.bool,\n  keyboard: PropTypes.bool,\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n  touchAction: PropTypes.string,\n  clickRadius: PropTypes.number,\n  interactiveLayerIds: PropTypes.array,\n  getCursor: PropTypes.func,\n  controller: PropTypes.instanceOf(MapController)\n});\nvar getDefaultCursor = function getDefaultCursor(_ref) {\n  var isDragging = _ref.isDragging,\n    isHovering = _ref.isHovering;\n  return isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n};\nvar defaultProps = Object.assign({}, StaticMap.defaultProps, MAPBOX_LIMITS, TransitionManager.defaultProps, {\n  onViewStateChange: null,\n  onViewportChange: null,\n  onClick: null,\n  onNativeClick: null,\n  onHover: null,\n  onContextMenu: function onContextMenu(event) {\n    return event.preventDefault();\n  },\n  scrollZoom: true,\n  dragPan: true,\n  dragRotate: true,\n  doubleClickZoom: true,\n  touchZoom: true,\n  touchRotate: false,\n  keyboard: true,\n  touchAction: 'none',\n  clickRadius: 0,\n  getCursor: getDefaultCursor\n});\nvar InteractiveMap = function (_PureComponent) {\n  _inherits(InteractiveMap, _PureComponent);\n  _createClass(InteractiveMap, null, [{\n    key: \"supported\",\n    value: function supported() {\n      return StaticMap.supported();\n    }\n  }]);\n  function InteractiveMap(props) {\n    var _this;\n    _classCallCheck(this, InteractiveMap);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InteractiveMap).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isLoaded: false,\n      isDragging: false,\n      isHovering: false\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_controller\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_eventManager\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_interactiveContext\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_width\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"_height\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"_eventCanvasRef\", createRef());\n    _defineProperty(_assertThisInitialized(_this), \"_staticMapRef\", createRef());\n    _defineProperty(_assertThisInitialized(_this), \"getMap\", function () {\n      return _this._staticMapRef.current ? _this._staticMapRef.current.getMap() : null;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"queryRenderedFeatures\", function (geometry) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var map = _this.getMap();\n      return map && map.queryRenderedFeatures(geometry, options);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onInteractionStateChange\", function (interactionState) {\n      var _interactionState$isD = interactionState.isDragging,\n        isDragging = _interactionState$isD === void 0 ? false : _interactionState$isD;\n      if (isDragging !== _this.state.isDragging) {\n        _this._updateInteractiveContext({\n          isDragging: isDragging\n        });\n        _this.setState({\n          isDragging: isDragging\n        });\n      }\n      var onInteractionStateChange = _this.props.onInteractionStateChange;\n      if (onInteractionStateChange) {\n        onInteractionStateChange(interactionState);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function (_ref2) {\n      var width = _ref2.width,\n        height = _ref2.height;\n      _this._width = width;\n      _this._height = height;\n      _this._setControllerProps(_this.props);\n      _this.props.onResize({\n        width: width,\n        height: height\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onViewportChange\", function (viewState, interactionState, oldViewState) {\n      var _this$props = _this.props,\n        onViewStateChange = _this$props.onViewStateChange,\n        onViewportChange = _this$props.onViewportChange;\n      if (onViewStateChange) {\n        onViewStateChange({\n          viewState: viewState,\n          interactionState: interactionState,\n          oldViewState: oldViewState\n        });\n      }\n      if (onViewportChange) {\n        onViewportChange(viewState, interactionState, oldViewState);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onLoad\", function (event) {\n      _this.setState({\n        isLoaded: true\n      });\n      _this.props.onLoad(event);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onEvent\", function (callbackName, event) {\n      var func = _this.props[callbackName];\n      if (func) {\n        func(_this._normalizeEvent(event));\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onPointerDown\", function (event) {\n      switch (event.pointerType) {\n        case 'touch':\n          _this._onEvent('onTouchStart', event);\n          break;\n        default:\n          _this._onEvent('onMouseDown', event);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onPointerUp\", function (event) {\n      switch (event.pointerType) {\n        case 'touch':\n          _this._onEvent('onTouchEnd', event);\n          break;\n        default:\n          _this._onEvent('onMouseUp', event);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onPointerMove\", function (event) {\n      switch (event.pointerType) {\n        case 'touch':\n          _this._onEvent('onTouchMove', event);\n          break;\n        default:\n          _this._onEvent('onMouseMove', event);\n      }\n      if (!_this.state.isDragging) {\n        var _this$props2 = _this.props,\n          onHover = _this$props2.onHover,\n          interactiveLayerIds = _this$props2.interactiveLayerIds;\n        var features;\n        event = _this._normalizeEvent(event);\n        if (_this.state.isLoaded && (interactiveLayerIds || onHover)) {\n          features = _this._getFeatures({\n            pos: event.point,\n            radius: _this.props.clickRadius\n          });\n        }\n        if (onHover) {\n          event.features = features;\n          onHover(event);\n        }\n        var isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n        var isEntering = isHovering && !_this.state.isHovering;\n        var isExiting = !isHovering && _this.state.isHovering;\n        if (isEntering) {\n          _this._onEvent('onMouseEnter', event);\n        }\n        if (isExiting) {\n          _this._onEvent('onMouseLeave', event);\n        }\n        if (isEntering || isExiting) {\n          _this.setState({\n            isHovering: isHovering\n          });\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onClick\", function (event) {\n      var _this$props3 = _this.props,\n        onClick = _this$props3.onClick,\n        onNativeClick = _this$props3.onNativeClick,\n        onDblClick = _this$props3.onDblClick,\n        doubleClickZoom = _this$props3.doubleClickZoom;\n      var callbacks = [];\n      var isDoubleClickEnabled = onDblClick || doubleClickZoom;\n      switch (event.type) {\n        case 'anyclick':\n          callbacks.push(onNativeClick);\n          if (!isDoubleClickEnabled) {\n            callbacks.push(onClick);\n          }\n          break;\n        case 'click':\n          if (isDoubleClickEnabled) {\n            callbacks.push(onClick);\n          }\n          break;\n        default:\n      }\n      callbacks = callbacks.filter(Boolean);\n      if (callbacks.length) {\n        event = _this._normalizeEvent(event);\n        event.features = _this._getFeatures({\n          pos: event.point,\n          radius: _this.props.clickRadius\n        });\n        callbacks.forEach(function (cb) {\n          return cb(event);\n        });\n      }\n    });\n    deprecateWarn(props);\n    _this._controller = props.controller || new MapController();\n    _this._eventManager = new EventManager(null, {\n      touchAction: props.touchAction\n    });\n    _this._updateInteractiveContext({\n      isDragging: false,\n      eventManager: _this._eventManager\n    });\n    return _this;\n  }\n  _createClass(InteractiveMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var eventManager = this._eventManager;\n      var mapContainer = this._eventCanvasRef.current;\n      eventManager.setElement(mapContainer);\n      eventManager.on({\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerup: this._onPointerUp,\n        pointerleave: this._onEvent.bind(this, 'onMouseOut'),\n        click: this._onClick,\n        anyclick: this._onClick,\n        dblclick: this._onEvent.bind(this, 'onDblClick'),\n        wheel: this._onEvent.bind(this, 'onWheel'),\n        contextmenu: this._onEvent.bind(this, 'onContextMenu')\n      });\n      this._setControllerProps(this.props);\n      this._updateInteractiveContext({\n        mapContainer: mapContainer\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._eventManager.destroy();\n    }\n  }, {\n    key: \"_setControllerProps\",\n    value: function _setControllerProps(props) {\n      props = Object.assign({}, props, props.viewState, {\n        isInteractive: Boolean(props.onViewStateChange || props.onViewportChange),\n        onViewportChange: this._onViewportChange,\n        onStateChange: this._onInteractionStateChange,\n        eventManager: this._eventManager,\n        width: this._width,\n        height: this._height\n      });\n      this._controller.setOptions(props);\n      var context = this._interactiveContext;\n      context.onViewportChange = props.onViewportChange;\n      context.onViewStateChange = props.onViewStateChange;\n    }\n  }, {\n    key: \"_getFeatures\",\n    value: function _getFeatures(_ref3) {\n      var pos = _ref3.pos,\n        radius = _ref3.radius;\n      var features;\n      var queryParams = {};\n      var map = this.getMap();\n      if (this.props.interactiveLayerIds) {\n        queryParams.layers = this.props.interactiveLayerIds;\n      }\n      if (radius) {\n        var size = radius;\n        var bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n        features = map && map.queryRenderedFeatures(bbox, queryParams);\n      } else {\n        features = map && map.queryRenderedFeatures(pos, queryParams);\n      }\n      return features;\n    }\n  }, {\n    key: \"_updateInteractiveContext\",\n    value: function _updateInteractiveContext(updatedContext) {\n      this._interactiveContext = Object.assign({}, this._interactiveContext, updatedContext);\n    }\n  }, {\n    key: \"_normalizeEvent\",\n    value: function _normalizeEvent(event) {\n      if (event.lngLat) {\n        return event;\n      }\n      var _event$offsetCenter = event.offsetCenter,\n        x = _event$offsetCenter.x,\n        y = _event$offsetCenter.y;\n      var pos = [x, y];\n      var viewport = new WebMercatorViewport(Object.assign({}, this.props, {\n        width: this._width,\n        height: this._height\n      }));\n      event.point = pos;\n      event.lngLat = viewport.unproject(pos);\n      return event;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this._setControllerProps(this.props);\n      var _this$props4 = this.props,\n        width = _this$props4.width,\n        height = _this$props4.height,\n        style = _this$props4.style,\n        getCursor = _this$props4.getCursor;\n      var eventCanvasStyle = Object.assign({\n        position: 'relative'\n      }, style, {\n        width: width,\n        height: height,\n        cursor: getCursor(this.state)\n      });\n      return React.createElement(MapContext.Provider, {\n        value: this._interactiveContext\n      }, React.createElement(\"div\", {\n        key: \"event-canvas\",\n        ref: this._eventCanvasRef,\n        style: eventCanvasStyle\n      }, React.createElement(StaticMap, _extends({}, this.props, {\n        width: \"100%\",\n        height: \"100%\",\n        style: null,\n        onResize: this._onResize,\n        onLoad: this._onLoad,\n        ref: this._staticMapRef\n      }), this.props.children)));\n    }\n  }]);\n  return InteractiveMap;\n}(PureComponent);\n_defineProperty(InteractiveMap, \"propTypes\", propTypes);\n_defineProperty(InteractiveMap, \"defaultProps\", defaultProps);\nexport { InteractiveMap as default };","map":{"version":3,"names":["React","PureComponent","createRef","PropTypes","StaticMap","MAPBOX_LIMITS","WebMercatorViewport","TransitionManager","MapContext","EventManager","MapController","deprecateWarn","propTypes","Object","assign","maxZoom","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","onInteractionStateChange","transitionDuration","oneOfType","string","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onDblClick","onContextMenu","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","onMouseOut","onWheel","touchAction","clickRadius","interactiveLayerIds","array","getCursor","controller","instanceOf","getDefaultCursor","_ref","isDragging","isHovering","defaultProps","onNativeClick","event","preventDefault","InteractiveMap","supported","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","isLoaded","_staticMapRef","current","getMap","geometry","options","arguments","length","undefined","map","queryRenderedFeatures","interactionState","_interactionState$isD","state","_updateInteractiveContext","setState","_ref2","width","height","_width","_height","_setControllerProps","onResize","viewState","oldViewState","_this$props","onLoad","callbackName","_normalizeEvent","pointerType","_onEvent","_this$props2","features","_getFeatures","pos","point","radius","Boolean","isEntering","isExiting","_this$props3","callbacks","isDoubleClickEnabled","type","push","filter","forEach","cb","_controller","_eventManager","eventManager","mapContainer","_eventCanvasRef","setElement","on","pointerdown","_onPointerDown","pointermove","_onPointerMove","pointerup","_onPointerUp","pointerleave","bind","click","_onClick","anyclick","dblclick","wheel","contextmenu","destroy","isInteractive","_onViewportChange","onStateChange","_onInteractionStateChange","setOptions","context","_interactiveContext","_ref3","queryParams","layers","size","bbox","updatedContext","lngLat","_event$offsetCenter","offsetCenter","x","y","viewport","unproject","_this$props4","style","eventCanvasStyle","position","cursor","createElement","Provider","value","key","ref","_extends","_onResize","_onLoad","children"],"sources":["/home/hp/adeela_map/adeela/node_modules/react-map-gl/src/components/interactive-map.js"],"sourcesContent":["// @flow\nimport React, {PureComponent, createRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext from './map-context';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport deprecateWarn from '../utils/deprecate-warn';\n\nimport type {ViewState} from '../mapbox/mapbox';\nimport type {StaticMapProps} from './static-map';\nimport type {MjolnirEvent} from 'mjolnir.js';\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n  /** Event callbacks */\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** List of layers that are interactive */\n  interactiveLayerIds: PropTypes.array,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controller\n  // The object must expose a method: `setOptions(opts)`\n  controller: PropTypes.instanceOf(MapController)\n});\n\ntype State = {\n  isLoaded: boolean,\n  isDragging: boolean,\n  isHovering: boolean\n};\n\nconst getDefaultCursor = ({isDragging, isHovering}: State) =>\n  isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n\nconst defaultProps = Object.assign(\n  {},\n  StaticMap.defaultProps,\n  MAPBOX_LIMITS,\n  TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onNativeClick: null,\n    onHover: null,\n    onContextMenu: (event: MouseEvent) => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n    touchZoom: true,\n    touchRotate: false,\n    keyboard: true,\n\n    touchAction: 'none',\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\ntype InteractionState = {\n  isDragging: boolean\n};\n\ntype MapEvent = MjolnirEvent & {\n  point: Array<number>,\n  lngLat: Array<number>,\n  features: ?Array<any>\n};\n\nexport type InteractiveMapProps = StaticMapProps & {\n  onViewStateChange: Function,\n  onViewportChange: Function,\n  onInteractionStateChange: Function,\n  onHover: Function,\n  onClick: Function,\n  onNativeClick: Function,\n  onDblClick: Function,\n  onContextMenu: Function,\n  onMouseDown: Function,\n  onMouseMove: Function,\n  onMouseUp: Function,\n  onTouchStart: Function,\n  onTouchMove: Function,\n  onTouchEnd: Function,\n  onMouseEnter: Function,\n  onMouseLeave: Function,\n  onMouseOut: Function,\n  onWheel: Function,\n\n  transitionDuration: number,\n  transitionInterpolator: any,\n  transitionInterruption: number,\n  transitionEasing: Function,\n\n  scrollZoom: boolean,\n  dragPan: boolean,\n  dragRotate: boolean,\n  doubleClickZoom: boolean,\n  touchZoom: boolean,\n  touchRotate: boolean,\n  keyboard: boolean,\n\n  touchAction: string,\n  clickRadius: number,\n  interactiveLayerIds: Array<string>,\n  getCursor: Function,\n  controller: MapController\n};\n\nexport default class InteractiveMap extends PureComponent<InteractiveMapProps, State> {\n  static supported() {\n    return StaticMap.supported();\n  }\n\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props: InteractiveMapProps) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    // If props.controller is not provided, fallback to default MapController instance\n    // Cannot use defaultProps here because it needs to be per map instance\n    this._controller = props.controller || new MapController();\n\n    this._eventManager = new EventManager(null, {\n      touchAction: props.touchAction\n    });\n\n    this._updateInteractiveContext({\n      isDragging: false,\n      eventManager: this._eventManager\n    });\n  }\n\n  state: State = {\n    // Whether mapbox styles have finished loading\n    isLoaded: false,\n    // Whether the cursor is down\n    isDragging: false,\n    // Whether the cursor is over a clickable feature\n    isHovering: false\n  };\n\n  componentDidMount() {\n    const eventManager = this._eventManager;\n\n    const mapContainer = this._eventCanvasRef.current;\n    eventManager.setElement(mapContainer);\n    // Register additional event handlers for click and hover\n    eventManager.on({\n      pointerdown: this._onPointerDown,\n      pointermove: this._onPointerMove,\n      pointerup: this._onPointerUp,\n      pointerleave: this._onEvent.bind(this, 'onMouseOut'),\n      click: this._onClick,\n      anyclick: this._onClick,\n      dblclick: this._onEvent.bind(this, 'onDblClick'),\n      wheel: this._onEvent.bind(this, 'onWheel'),\n      contextmenu: this._onEvent.bind(this, 'onContextMenu')\n    });\n\n    this._setControllerProps(this.props);\n\n    this._updateInteractiveContext({mapContainer});\n  }\n\n  componentWillUnmount() {\n    this._eventManager.destroy();\n  }\n\n  _controller: MapController;\n  _eventManager: any;\n  _interactiveContext: MapContextProps;\n  _width: number = 0;\n  _height: number = 0;\n  _eventCanvasRef: {current: null | HTMLDivElement} = createRef();\n  _staticMapRef: {current: null | StaticMap} = createRef();\n\n  getMap = () => {\n    return this._staticMapRef.current ? this._staticMapRef.current.getMap() : null;\n  };\n\n  queryRenderedFeatures = (geometry: any, options: any = {}) => {\n    const map = this.getMap();\n    return map && map.queryRenderedFeatures(geometry, options);\n  };\n\n  _setControllerProps(props: InteractiveMapProps) {\n    props = Object.assign({}, props, props.viewState, {\n      isInteractive: Boolean(props.onViewStateChange || props.onViewportChange),\n      onViewportChange: this._onViewportChange,\n      onStateChange: this._onInteractionStateChange,\n      eventManager: this._eventManager,\n      width: this._width,\n      height: this._height\n    });\n\n    this._controller.setOptions(props);\n\n    // Pass callbacks via MapContext\n    // Do not create a new context object because these do not affect render\n    const context = this._interactiveContext;\n    context.onViewportChange = props.onViewportChange;\n    context.onViewStateChange = props.onViewStateChange;\n  }\n\n  _getFeatures({pos, radius}: {pos: Array<number>, radius: number}) {\n    let features;\n    const queryParams = {};\n    const map = this.getMap();\n\n    if (this.props.interactiveLayerIds) {\n      queryParams.layers = this.props.interactiveLayerIds;\n    }\n\n    if (radius) {\n      // Radius enables point features, like marker symbols, to be clicked.\n      const size = radius;\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n      features = map && map.queryRenderedFeatures(bbox, queryParams);\n    } else {\n      features = map && map.queryRenderedFeatures(pos, queryParams);\n    }\n    return features;\n  }\n\n  _onInteractionStateChange = (interactionState: InteractionState) => {\n    const {isDragging = false} = interactionState;\n    if (isDragging !== this.state.isDragging) {\n      this._updateInteractiveContext({isDragging});\n      this.setState({isDragging});\n    }\n\n    const {onInteractionStateChange} = this.props;\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  };\n\n  _updateInteractiveContext(updatedContext: $Shape<MapContextProps>) {\n    this._interactiveContext = Object.assign({}, this._interactiveContext, updatedContext);\n  }\n\n  _onResize = ({width, height}: {width: number, height: number}) => {\n    this._width = width;\n    this._height = height;\n    this._setControllerProps(this.props);\n    this.props.onResize({width, height});\n  };\n\n  _onViewportChange = (\n    viewState: ViewState,\n    interactionState: InteractionState,\n    oldViewState: ViewState\n  ) => {\n    const {onViewStateChange, onViewportChange} = this.props;\n\n    if (onViewStateChange) {\n      onViewStateChange({viewState, interactionState, oldViewState});\n    }\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  };\n\n  /* Generic event handling */\n  _normalizeEvent(event: MapEvent) {\n    if (event.lngLat) {\n      // Already unprojected\n      return event;\n    }\n\n    const {\n      offsetCenter: {x, y}\n    } = event;\n    const pos = [x, y];\n\n    const viewport = new WebMercatorViewport(\n      // $FlowFixMe\n      Object.assign({}, this.props, {\n        width: this._width,\n        height: this._height\n      })\n    );\n\n    event.point = pos;\n    event.lngLat = viewport.unproject(pos);\n\n    return event;\n  }\n\n  _onLoad = (event: MapEvent) => {\n    this.setState({isLoaded: true});\n    this.props.onLoad(event);\n  };\n\n  _onEvent = (callbackName: string, event: MapEvent) => {\n    const func = this.props[callbackName];\n    if (func) {\n      func(this._normalizeEvent(event));\n    }\n  };\n\n  /* Special case event handling */\n  _onPointerDown = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchStart', event);\n        break;\n\n      default:\n        this._onEvent('onMouseDown', event);\n    }\n  };\n\n  _onPointerUp = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchEnd', event);\n        break;\n\n      default:\n        this._onEvent('onMouseUp', event);\n    }\n  };\n\n  // eslint-disable-next-line complexity\n  _onPointerMove = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchMove', event);\n        break;\n\n      default:\n        this._onEvent('onMouseMove', event);\n    }\n\n    if (!this.state.isDragging) {\n      const {onHover, interactiveLayerIds} = this.props;\n      let features;\n      event = this._normalizeEvent(event);\n      if (this.state.isLoaded && (interactiveLayerIds || onHover)) {\n        features = this._getFeatures({\n          pos: event.point,\n          radius: this.props.clickRadius\n        });\n      }\n      if (onHover) {\n        // backward compatibility: v3 `onHover` interface\n        event.features = features;\n        onHover(event);\n      }\n\n      const isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n      const isEntering = isHovering && !this.state.isHovering;\n      const isExiting = !isHovering && this.state.isHovering;\n\n      if (isEntering) {\n        this._onEvent('onMouseEnter', event);\n      }\n      if (isExiting) {\n        this._onEvent('onMouseLeave', event);\n      }\n      if (isEntering || isExiting) {\n        this.setState({isHovering});\n      }\n    }\n  };\n\n  _onClick = (event: MapEvent) => {\n    const {onClick, onNativeClick, onDblClick, doubleClickZoom} = this.props;\n    let callbacks = [];\n    const isDoubleClickEnabled = onDblClick || doubleClickZoom;\n\n    // `click` is only fired on single click. `anyclick` is fired twice if double clicking.\n    // `click` has a delay period after pointer up that prevents it from firing when\n    // double clicking. `anyclick` is always fired immediately after pointer up.\n    // If double click is turned off by the user, we want to immediately fire the\n    // onClick event. Otherwise, we wait to make sure it's a single click.\n    switch (event.type) {\n      case 'anyclick':\n        callbacks.push(onNativeClick);\n        if (!isDoubleClickEnabled) {\n          callbacks.push(onClick);\n        }\n        break;\n\n      case 'click':\n        if (isDoubleClickEnabled) {\n          callbacks.push(onClick);\n        }\n        break;\n\n      default:\n    }\n\n    callbacks = callbacks.filter(Boolean);\n\n    if (callbacks.length) {\n      event = this._normalizeEvent(event);\n      // backward compatibility: v3 `onClick` interface\n      event.features = this._getFeatures({\n        pos: event.point,\n        radius: this.props.clickRadius\n      });\n      callbacks.forEach(cb => cb(event));\n    }\n  };\n\n  render() {\n    this._setControllerProps(this.props);\n\n    const {width, height, style, getCursor} = this.props;\n\n    const eventCanvasStyle = Object.assign({position: 'relative'}, style, {\n      width,\n      height,\n      cursor: getCursor(this.state)\n    });\n\n    return (\n      <MapContext.Provider value={this._interactiveContext}>\n        <div key=\"event-canvas\" ref={this._eventCanvasRef} style={eventCanvasStyle}>\n          <StaticMap\n            {...this.props}\n            width=\"100%\"\n            height=\"100%\"\n            style={null}\n            onResize={this._onResize}\n            onLoad={this._onLoad}\n            ref={this._staticMapRef}\n          >\n            {this.props.children}\n          </StaticMap>\n        </div>\n      </MapContext.Provider>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}