{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { equals } from '../math-utils';\nimport assert from '../assert';\nvar TransitionInterpolator = function () {\n  function TransitionInterpolator() {\n    _classCallCheck(this, TransitionInterpolator);\n    _defineProperty(this, \"propNames\", []);\n  }\n  _createClass(TransitionInterpolator, [{\n    key: \"arePropsEqual\",\n    value: function arePropsEqual(currentProps, nextProps) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = (this.propNames || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n          if (!equals(currentProps[key], nextProps[key])) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      return {\n        start: startProps,\n        end: endProps\n      };\n    }\n  }, {\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      assert(false, 'interpolateProps is not implemented');\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration(startProps, endProps) {\n      return endProps.transitionDuration;\n    }\n  }]);\n  return TransitionInterpolator;\n}();\nexport { TransitionInterpolator as default };","map":{"version":3,"names":["equals","assert","TransitionInterpolator","currentProps","nextProps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","propNames","Symbol","iterator","_step","next","done","key","value","err","startProps","endProps","start","end","t","transitionDuration"],"sources":["/home/hp/adeela_map/adeela/node_modules/react-map-gl/src/utils/transition/transition-interpolator.js"],"sourcesContent":["// @flow\nimport {equals} from '../math-utils';\nimport assert from '../assert';\nimport type {MapStateProps} from '../map-state';\n\nexport default class TransitionInterpolator {\n  propNames: Array<string> = [];\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {bool} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps: any, nextProps: any): boolean {\n    for (const key of this.propNames || []) {\n      if (!equals(currentProps[key], nextProps[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(\n    startProps: any,\n    endProps: any\n  ): {\n    start: any,\n    end: any\n  } {\n    return {start: startProps, end: endProps};\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  interpolateProps(startProps: any, endProps: any, t: number): any {\n    assert(false, 'interpolateProps is not implemented');\n  }\n\n  /**\n   * Returns transition duration\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Number} - transition duration in milliseconds\n   */\n  getDuration(startProps: MapStateProps, endProps: MapStateProps) {\n    return endProps.transitionDuration;\n  }\n}\n"],"mappings":";;;AACA,SAAQA,MAAR,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;IAGqBC,sB;;;uCACQ,E;;;;kCAQbC,Y,EAAmBC,S,EAAyB;MAAA,IAAAC,yBAAA;MAAA,IAAAC,iBAAA;MAAA,IAAAC,cAAA,GAAAC,SAAA;MAAA;QACxD,SAAAC,SAAA,IAAkB,KAAKC,SAAL,IAAkB,EAApC,EAAAC,MAAA,CAAAC,QAAA,KAAAC,KAAA,IAAAR,yBAAA,IAAAQ,KAAA,GAAAJ,SAAA,CAAAK,IAAA,IAAAC,IAAA,GAAAV,yBAAA,SAAwC;UAAA,IAA7BW,GAA6B,GAAAH,KAAA,CAAAI,KAAA;UACtC,IAAI,CAACjB,MAAM,CAACG,YAAY,CAACa,GAAD,CAAb,EAAoBZ,SAAS,CAACY,GAAD,CAA7B,CAAX,EAAgD;YAC9C,OAAO,KAAP;UACD;QACF;MALuD,SAAAE,GAAA;QAAAZ,iBAAA;QAAAC,cAAA,GAAAW,GAAA;MAAA;QAAA;UAAA,KAAAb,yBAAA,IAAAI,SAAA;YAAAA,SAAA;UAAA;QAAA;UAAA,IAAAH,iBAAA;YAAA,MAAAC,cAAA;UAAA;QAAA;MAAA;MAMxD,OAAO,IAAP;IACD;;;oCAUCY,U,EACAC,Q,EAIA;MACA,OAAO;QAACC,KAAK,EAAEF,UAAR;QAAoBG,GAAG,EAAEF;MAAzB,CAAP;IACD;;;qCASgBD,U,EAAiBC,Q,EAAeG,C,EAAgB;MAC/DtB,MAAM,CAAC,KAAD,EAAQ,qCAAR,CAAN;IACD;;;gCAQWkB,U,EAA2BC,Q,EAAyB;MAC9D,OAAOA,QAAQ,CAACI,kBAAhB;IACD;;;;SAtDkBtB,sB"},"metadata":{},"sourceType":"module","externalDependencies":[]}