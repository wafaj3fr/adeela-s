{"ast":null,"code":"var DEPRECATED_PROPS = [{\n  old: 'onChangeViewport',\n  \"new\": 'onViewportChange'\n}, {\n  old: 'perspectiveEnabled',\n  \"new\": 'dragRotate'\n}, {\n  old: 'onHoverFeatures',\n  \"new\": 'onHover'\n}, {\n  old: 'onClickFeatures',\n  \"new\": 'onClick'\n}, {\n  old: 'touchZoomRotate',\n  \"new\": 'touchZoom, touchRotate'\n}, {\n  old: 'mapControls',\n  \"new\": 'controller'\n}];\nfunction getDeprecatedText(name) {\n  return \"react-map-gl: `\".concat(name, \"` is removed.\");\n}\nfunction getNewText(name) {\n  return \"Use `\".concat(name, \"` instead.\");\n}\nexport default function checkDeprecatedProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  DEPRECATED_PROPS.forEach(function (depProp) {\n    if (props.hasOwnProperty(depProp.old)) {\n      var warnMessage = getDeprecatedText(depProp.old);\n      if (depProp[\"new\"]) {\n        warnMessage = \"\".concat(warnMessage, \" \").concat(getNewText(depProp[\"new\"]));\n      }\n      console.warn(warnMessage);\n    }\n  });\n}","map":{"version":3,"names":["DEPRECATED_PROPS","old","getDeprecatedText","name","concat","getNewText","checkDeprecatedProps","props","arguments","length","undefined","forEach","depProp","hasOwnProperty","warnMessage","console","warn"],"sources":["/home/hp/adeela_map/adeela/node_modules/react-map-gl/src/utils/deprecate-warn.js"],"sourcesContent":["// @flow\n\n// 'new' is optional\nconst DEPRECATED_PROPS = [\n  {old: 'onChangeViewport', new: 'onViewportChange'},\n  {old: 'perspectiveEnabled', new: 'dragRotate'},\n  {old: 'onHoverFeatures', new: 'onHover'},\n  {old: 'onClickFeatures', new: 'onClick'},\n  {old: 'touchZoomRotate', new: 'touchZoom, touchRotate'},\n  {old: 'mapControls', new: 'controller'}\n];\n\nfunction getDeprecatedText(name: string): string {\n  return `react-map-gl: \\`${name}\\` is removed.`;\n}\n\nfunction getNewText(name: string): string {\n  return `Use \\`${name}\\` instead.`;\n}\n\n/**\n * Checks props object for any prop that is deprecated and insert a console\n * warning to the user. This will also print out the recommended new prop/API\n * if one exists.\n */\nexport default function checkDeprecatedProps(props: any = {}) {\n  /* eslint-disable no-console, no-undef */\n  DEPRECATED_PROPS.forEach(depProp => {\n    if (props.hasOwnProperty(depProp.old)) {\n      let warnMessage = getDeprecatedText(depProp.old);\n      if (depProp.new) {\n        warnMessage = `${warnMessage} ${getNewText(depProp.new)}`;\n      }\n      console.warn(warnMessage);\n    }\n  });\n}\n"],"mappings":"AAGA,IAAMA,gBAAgB,GAAG,CACvB;EAACC,GAAG,EAAE,kBAAN;EAA0B,OAAK;AAA/B,CADuB,EAEvB;EAACA,GAAG,EAAE,oBAAN;EAA4B,OAAK;AAAjC,CAFuB,EAGvB;EAACA,GAAG,EAAE,iBAAN;EAAyB,OAAK;AAA9B,CAHuB,EAIvB;EAACA,GAAG,EAAE,iBAAN;EAAyB,OAAK;AAA9B,CAJuB,EAKvB;EAACA,GAAG,EAAE,iBAAN;EAAyB,OAAK;AAA9B,CALuB,EAMvB;EAACA,GAAG,EAAE,aAAN;EAAqB,OAAK;AAA1B,CANuB,CAAzB;AASA,SAASC,iBAATA,CAA2BC,IAA3B,EAAiD;EAC/C,yBAAAC,MAAA,CAA0BD,IAA1B;AACD;AAED,SAASE,UAATA,CAAoBF,IAApB,EAA0C;EACxC,eAAAC,MAAA,CAAgBD,IAAhB;AACD;AAOD,eAAe,SAASG,oBAATA,CAAA,EAA+C;EAAA,IAAjBC,KAAiB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,EAAI;EAE5DR,gBAAgB,CAACW,OAAjB,CAAyB,UAAAC,OAAO,EAAI;IAClC,IAAIL,KAAK,CAACM,cAAN,CAAqBD,OAAO,CAACX,GAA7B,CAAJ,EAAuC;MACrC,IAAIa,WAAW,GAAGZ,iBAAiB,CAACU,OAAO,CAACX,GAAT,CAAnC;MACA,IAAIW,OAAO,OAAX,EAAiB;QACfE,WAAW,MAAAV,MAAA,CAAMU,WAAN,OAAAV,MAAA,CAAqBC,UAAU,CAACO,OAAO,OAAR,CAA/B,CAAX;MACD;MACDG,OAAO,CAACC,IAAR,CAAaF,WAAb;IACD;EACF,CARD;AASD"},"metadata":{},"sourceType":"module","externalDependencies":[]}