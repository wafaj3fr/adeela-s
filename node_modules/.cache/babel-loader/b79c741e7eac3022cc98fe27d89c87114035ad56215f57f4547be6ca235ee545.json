{"ast":null,"code":"// src/use-snap-carousel.tsx\nimport { useState, useCallback, useEffect as useEffect2, useMemo } from \"react\";\n\n// src/use-isomorphic-layout-effect.tsx\nimport { useEffect, useLayoutEffect } from \"react\";\nvar useIsomorphicLayoutEffect = typeof document !== \"undefined\" ? useLayoutEffect : useEffect;\n\n// src/use-snap-carousel.tsx\nvar useSnapCarousel = ({\n  axis = \"x\",\n  initialPages = []\n} = {}) => {\n  const dimension = axis === \"x\" ? \"width\" : \"height\";\n  const scrollDimension = axis === \"x\" ? \"scrollWidth\" : \"scrollHeight\";\n  const clientDimension = axis === \"x\" ? \"clientWidth\" : \"clientHeight\";\n  const nearSidePos = axis === \"x\" ? \"left\" : \"top\";\n  const farSidePos = axis === \"x\" ? \"right\" : \"bottom\";\n  const scrollPos = axis === \"x\" ? \"scrollLeft\" : \"scrollTop\";\n  const [scrollEl, setScrollEl] = useState(null);\n  const [{\n    pages,\n    activePageIndex\n  }, setCarouselState] = useState({\n    pages: initialPages,\n    activePageIndex: 0\n  });\n  const refreshActivePage = useCallback(pages2 => {\n    if (!scrollEl) {\n      return;\n    }\n    const hasScrolledToEnd = Math.floor(scrollEl[scrollDimension] - scrollEl[scrollPos]) <= scrollEl[clientDimension];\n    if (hasScrolledToEnd) {\n      setCarouselState({\n        pages: pages2,\n        activePageIndex: pages2.length - 1\n      });\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const scrollPort = scrollEl.getBoundingClientRect();\n    const offsets = pages2.map(page => {\n      const leadIndex = page[0];\n      const leadEl = items[leadIndex];\n      assert(leadEl instanceof HTMLElement, \"Expected HTMLElement\");\n      const scrollSpacing = getEffectiveScrollSpacing(scrollEl, leadEl, nearSidePos);\n      const rect = leadEl.getBoundingClientRect();\n      const offset = rect[nearSidePos] - scrollPort[nearSidePos] - scrollSpacing;\n      return Math.abs(offset);\n    });\n    const minOffset = Math.min(...offsets);\n    const nextActivePageIndex = offsets.indexOf(minOffset);\n    setCarouselState({\n      pages: pages2,\n      activePageIndex: nextActivePageIndex\n    });\n  }, [scrollEl, clientDimension, nearSidePos, scrollDimension, scrollPos]);\n  const refresh = useCallback(() => {\n    if (!scrollEl) {\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const scrollPort = scrollEl.getBoundingClientRect();\n    let currPageStartPos;\n    const pages2 = items.reduce((acc, item, i) => {\n      assert(item instanceof HTMLElement, \"Expected HTMLElement\");\n      const currPage = acc[acc.length - 1];\n      const rect = getOffsetRect(item, item.parentElement);\n      if (!currPage || rect[farSidePos] - currPageStartPos > Math.ceil(scrollPort[dimension])) {\n        acc.push([i]);\n        const scrollSpacing = getEffectiveScrollSpacing(scrollEl, item, nearSidePos);\n        currPageStartPos = rect[nearSidePos] - scrollSpacing;\n      } else {\n        currPage.push(i);\n      }\n      return acc;\n    }, []);\n    refreshActivePage(pages2);\n  }, [refreshActivePage, scrollEl, dimension, farSidePos, nearSidePos, scrollPos]);\n  useIsomorphicLayoutEffect(() => {\n    refresh();\n  }, [refresh]);\n  useEffect2(() => {\n    const handle = () => {\n      refresh();\n    };\n    window.addEventListener(\"resize\", handle);\n    window.addEventListener(\"orientationchange\", handle);\n    return () => {\n      window.removeEventListener(\"resize\", handle);\n      window.removeEventListener(\"orientationchange\", handle);\n    };\n  }, [refresh]);\n  useEffect2(() => {\n    if (!scrollEl) {\n      return;\n    }\n    const handle = () => {\n      refreshActivePage(pages);\n    };\n    scrollEl.addEventListener(\"scroll\", handle);\n    return () => {\n      scrollEl.removeEventListener(\"scroll\", handle);\n    };\n  }, [refreshActivePage, pages, scrollEl]);\n  const handleGoTo = index => {\n    if (!scrollEl) {\n      return;\n    }\n    const page = pages[index];\n    if (!page) {\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const leadIndex = page[0];\n    const leadEl = items[leadIndex];\n    if (!(leadEl instanceof HTMLElement)) {\n      return;\n    }\n    const scrollSpacing = getEffectiveScrollSpacing(scrollEl, leadEl, nearSidePos);\n    scrollEl.scrollTo({\n      behavior: \"smooth\",\n      [nearSidePos]: getOffsetRect(leadEl, leadEl.parentElement)[nearSidePos] - scrollSpacing\n    });\n  };\n  const handlePrev = () => {\n    handleGoTo(activePageIndex - 1);\n  };\n  const handleNext = () => {\n    handleGoTo(activePageIndex + 1);\n  };\n  const snapPointIndexes = useMemo(() => new Set(pages.map(page => page[0])), [pages]);\n  return {\n    prev: handlePrev,\n    next: handleNext,\n    goTo: handleGoTo,\n    refresh,\n    pages,\n    activePageIndex,\n    snapPointIndexes,\n    scrollRef: setScrollEl\n  };\n};\nvar getOffsetRect = (el, relativeTo) => {\n  const rect = _getOffsetRect(el);\n  if (!relativeTo) {\n    return rect;\n  }\n  const relativeRect = _getOffsetRect(relativeTo);\n  return {\n    left: rect.left - relativeRect.left,\n    top: rect.top - relativeRect.top,\n    right: rect.right - relativeRect.left,\n    bottom: rect.bottom - relativeRect.top,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar _getOffsetRect = el => {\n  const rect = el.getBoundingClientRect();\n  let scrollLeft = 0;\n  let scrollTop = 0;\n  let parentEl = el.parentElement;\n  while (parentEl) {\n    scrollLeft += parentEl.scrollLeft;\n    scrollTop += parentEl.scrollTop;\n    parentEl = parentEl.parentElement;\n  }\n  const left = rect.left + scrollLeft;\n  const top = rect.top + scrollTop;\n  return {\n    left,\n    top,\n    right: left + rect.width,\n    bottom: top + rect.height,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar getScrollPaddingUsedValue = (el, pos) => {\n  const style = window.getComputedStyle(el);\n  const scrollPadding = style.getPropertyValue(`scroll-padding-${pos}`);\n  if (scrollPadding === \"auto\") {\n    return 0;\n  }\n  const invalidMsg = `Unsupported scroll padding value, expected <length> or <percentage> value, received ${scrollPadding}`;\n  if (scrollPadding.endsWith(\"px\")) {\n    const value = parseInt(scrollPadding);\n    assert(!Number.isNaN(value), invalidMsg);\n    return value;\n  }\n  if (scrollPadding.endsWith(\"%\")) {\n    const value = parseInt(scrollPadding);\n    assert(!Number.isNaN(value), invalidMsg);\n    return el.clientWidth / 100 * value;\n  }\n  throw new RSCError(invalidMsg);\n};\nvar getScrollMarginUsedValue = (el, pos) => {\n  const style = window.getComputedStyle(el);\n  const scrollMargin = style.getPropertyValue(`scroll-margin-${pos}`);\n  const invalidMsg = `Unsupported scroll margin value, expected <length> value, received ${scrollMargin}`;\n  assert(scrollMargin.endsWith(\"px\"), invalidMsg);\n  const value = parseInt(scrollMargin);\n  assert(!Number.isNaN(value), invalidMsg);\n  return value;\n};\nvar getEffectiveScrollSpacing = (scrollEl, itemEl, pos) => {\n  const scrollPadding = getScrollPaddingUsedValue(scrollEl, pos);\n  const scrollMargin = getScrollMarginUsedValue(itemEl, pos);\n  const rect = getOffsetRect(itemEl, itemEl.parentElement);\n  return Math.min(scrollPadding + scrollMargin, rect[pos]);\n};\nfunction assert(value, message) {\n  if (value) {\n    return;\n  }\n  throw new RSCError(message);\n}\nvar RSCError = class extends Error {\n  constructor(message) {\n    super(`[react-snap-carousel]: ${message}`);\n  }\n};\nexport { useSnapCarousel };","map":{"version":3,"names":["useState","useCallback","useEffect","useEffect2","useMemo","useLayoutEffect","useIsomorphicLayoutEffect","document","useSnapCarousel","axis","initialPages","dimension","scrollDimension","clientDimension","nearSidePos","farSidePos","scrollPos","scrollEl","setScrollEl","pages","activePageIndex","setCarouselState","refreshActivePage","pages2","hasScrolledToEnd","Math","floor","length","items","Array","from","children","scrollPort","getBoundingClientRect","offsets","map","page","leadIndex","leadEl","assert","HTMLElement","scrollSpacing","getEffectiveScrollSpacing","rect","offset","abs","minOffset","min","nextActivePageIndex","indexOf","refresh","currPageStartPos","reduce","acc","item","i","currPage","getOffsetRect","parentElement","ceil","push","handle","window","addEventListener","removeEventListener","handleGoTo","index","scrollTo","behavior","handlePrev","handleNext","snapPointIndexes","Set","prev","next","goTo","scrollRef","el","relativeTo","_getOffsetRect","relativeRect","left","top","right","bottom","width","height","scrollLeft","scrollTop","parentEl","getScrollPaddingUsedValue","pos","style","getComputedStyle","scrollPadding","getPropertyValue","invalidMsg","endsWith","value","parseInt","Number","isNaN","clientWidth","RSCError","getScrollMarginUsedValue","scrollMargin","itemEl","message","Error","constructor"],"sources":["/home/hp/adeela_map/adeela/node_modules/react-snap-carousel/dist/use-snap-carousel.mjs"],"sourcesContent":["// src/use-snap-carousel.tsx\nimport { useState, useCallback, useEffect as useEffect2, useMemo } from \"react\";\n\n// src/use-isomorphic-layout-effect.tsx\nimport { useEffect, useLayoutEffect } from \"react\";\nvar useIsomorphicLayoutEffect = typeof document !== \"undefined\" ? useLayoutEffect : useEffect;\n\n// src/use-snap-carousel.tsx\nvar useSnapCarousel = ({\n  axis = \"x\",\n  initialPages = []\n} = {}) => {\n  const dimension = axis === \"x\" ? \"width\" : \"height\";\n  const scrollDimension = axis === \"x\" ? \"scrollWidth\" : \"scrollHeight\";\n  const clientDimension = axis === \"x\" ? \"clientWidth\" : \"clientHeight\";\n  const nearSidePos = axis === \"x\" ? \"left\" : \"top\";\n  const farSidePos = axis === \"x\" ? \"right\" : \"bottom\";\n  const scrollPos = axis === \"x\" ? \"scrollLeft\" : \"scrollTop\";\n  const [scrollEl, setScrollEl] = useState(null);\n  const [{ pages, activePageIndex }, setCarouselState] = useState({\n    pages: initialPages,\n    activePageIndex: 0\n  });\n  const refreshActivePage = useCallback(\n    (pages2) => {\n      if (!scrollEl) {\n        return;\n      }\n      const hasScrolledToEnd = Math.floor(scrollEl[scrollDimension] - scrollEl[scrollPos]) <= scrollEl[clientDimension];\n      if (hasScrolledToEnd) {\n        setCarouselState({ pages: pages2, activePageIndex: pages2.length - 1 });\n        return;\n      }\n      const items = Array.from(scrollEl.children);\n      const scrollPort = scrollEl.getBoundingClientRect();\n      const offsets = pages2.map((page) => {\n        const leadIndex = page[0];\n        const leadEl = items[leadIndex];\n        assert(leadEl instanceof HTMLElement, \"Expected HTMLElement\");\n        const scrollSpacing = getEffectiveScrollSpacing(\n          scrollEl,\n          leadEl,\n          nearSidePos\n        );\n        const rect = leadEl.getBoundingClientRect();\n        const offset = rect[nearSidePos] - scrollPort[nearSidePos] - scrollSpacing;\n        return Math.abs(offset);\n      });\n      const minOffset = Math.min(...offsets);\n      const nextActivePageIndex = offsets.indexOf(minOffset);\n      setCarouselState({ pages: pages2, activePageIndex: nextActivePageIndex });\n    },\n    [scrollEl, clientDimension, nearSidePos, scrollDimension, scrollPos]\n  );\n  const refresh = useCallback(() => {\n    if (!scrollEl) {\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const scrollPort = scrollEl.getBoundingClientRect();\n    let currPageStartPos;\n    const pages2 = items.reduce((acc, item, i) => {\n      assert(item instanceof HTMLElement, \"Expected HTMLElement\");\n      const currPage = acc[acc.length - 1];\n      const rect = getOffsetRect(item, item.parentElement);\n      if (!currPage || rect[farSidePos] - currPageStartPos > Math.ceil(scrollPort[dimension])) {\n        acc.push([i]);\n        const scrollSpacing = getEffectiveScrollSpacing(\n          scrollEl,\n          item,\n          nearSidePos\n        );\n        currPageStartPos = rect[nearSidePos] - scrollSpacing;\n      } else {\n        currPage.push(i);\n      }\n      return acc;\n    }, []);\n    refreshActivePage(pages2);\n  }, [\n    refreshActivePage,\n    scrollEl,\n    dimension,\n    farSidePos,\n    nearSidePos,\n    scrollPos\n  ]);\n  useIsomorphicLayoutEffect(() => {\n    refresh();\n  }, [refresh]);\n  useEffect2(() => {\n    const handle = () => {\n      refresh();\n    };\n    window.addEventListener(\"resize\", handle);\n    window.addEventListener(\"orientationchange\", handle);\n    return () => {\n      window.removeEventListener(\"resize\", handle);\n      window.removeEventListener(\"orientationchange\", handle);\n    };\n  }, [refresh]);\n  useEffect2(() => {\n    if (!scrollEl) {\n      return;\n    }\n    const handle = () => {\n      refreshActivePage(pages);\n    };\n    scrollEl.addEventListener(\"scroll\", handle);\n    return () => {\n      scrollEl.removeEventListener(\"scroll\", handle);\n    };\n  }, [refreshActivePage, pages, scrollEl]);\n  const handleGoTo = (index) => {\n    if (!scrollEl) {\n      return;\n    }\n    const page = pages[index];\n    if (!page) {\n      return;\n    }\n    const items = Array.from(scrollEl.children);\n    const leadIndex = page[0];\n    const leadEl = items[leadIndex];\n    if (!(leadEl instanceof HTMLElement)) {\n      return;\n    }\n    const scrollSpacing = getEffectiveScrollSpacing(\n      scrollEl,\n      leadEl,\n      nearSidePos\n    );\n    scrollEl.scrollTo({\n      behavior: \"smooth\",\n      [nearSidePos]: getOffsetRect(leadEl, leadEl.parentElement)[nearSidePos] - scrollSpacing\n    });\n  };\n  const handlePrev = () => {\n    handleGoTo(activePageIndex - 1);\n  };\n  const handleNext = () => {\n    handleGoTo(activePageIndex + 1);\n  };\n  const snapPointIndexes = useMemo(\n    () => new Set(pages.map((page) => page[0])),\n    [pages]\n  );\n  return {\n    prev: handlePrev,\n    next: handleNext,\n    goTo: handleGoTo,\n    refresh,\n    pages,\n    activePageIndex,\n    snapPointIndexes,\n    scrollRef: setScrollEl\n  };\n};\nvar getOffsetRect = (el, relativeTo) => {\n  const rect = _getOffsetRect(el);\n  if (!relativeTo) {\n    return rect;\n  }\n  const relativeRect = _getOffsetRect(relativeTo);\n  return {\n    left: rect.left - relativeRect.left,\n    top: rect.top - relativeRect.top,\n    right: rect.right - relativeRect.left,\n    bottom: rect.bottom - relativeRect.top,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar _getOffsetRect = (el) => {\n  const rect = el.getBoundingClientRect();\n  let scrollLeft = 0;\n  let scrollTop = 0;\n  let parentEl = el.parentElement;\n  while (parentEl) {\n    scrollLeft += parentEl.scrollLeft;\n    scrollTop += parentEl.scrollTop;\n    parentEl = parentEl.parentElement;\n  }\n  const left = rect.left + scrollLeft;\n  const top = rect.top + scrollTop;\n  return {\n    left,\n    top,\n    right: left + rect.width,\n    bottom: top + rect.height,\n    width: rect.width,\n    height: rect.height\n  };\n};\nvar getScrollPaddingUsedValue = (el, pos) => {\n  const style = window.getComputedStyle(el);\n  const scrollPadding = style.getPropertyValue(`scroll-padding-${pos}`);\n  if (scrollPadding === \"auto\") {\n    return 0;\n  }\n  const invalidMsg = `Unsupported scroll padding value, expected <length> or <percentage> value, received ${scrollPadding}`;\n  if (scrollPadding.endsWith(\"px\")) {\n    const value = parseInt(scrollPadding);\n    assert(!Number.isNaN(value), invalidMsg);\n    return value;\n  }\n  if (scrollPadding.endsWith(\"%\")) {\n    const value = parseInt(scrollPadding);\n    assert(!Number.isNaN(value), invalidMsg);\n    return el.clientWidth / 100 * value;\n  }\n  throw new RSCError(invalidMsg);\n};\nvar getScrollMarginUsedValue = (el, pos) => {\n  const style = window.getComputedStyle(el);\n  const scrollMargin = style.getPropertyValue(`scroll-margin-${pos}`);\n  const invalidMsg = `Unsupported scroll margin value, expected <length> value, received ${scrollMargin}`;\n  assert(scrollMargin.endsWith(\"px\"), invalidMsg);\n  const value = parseInt(scrollMargin);\n  assert(!Number.isNaN(value), invalidMsg);\n  return value;\n};\nvar getEffectiveScrollSpacing = (scrollEl, itemEl, pos) => {\n  const scrollPadding = getScrollPaddingUsedValue(scrollEl, pos);\n  const scrollMargin = getScrollMarginUsedValue(itemEl, pos);\n  const rect = getOffsetRect(itemEl, itemEl.parentElement);\n  return Math.min(scrollPadding + scrollMargin, rect[pos]);\n};\nfunction assert(value, message) {\n  if (value) {\n    return;\n  }\n  throw new RSCError(message);\n}\nvar RSCError = class extends Error {\n  constructor(message) {\n    super(`[react-snap-carousel]: ${message}`);\n  }\n};\nexport {\n  useSnapCarousel\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}